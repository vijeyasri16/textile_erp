generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id              Int     @id @default(autoincrement())
  name            String
  phone           String
  deliveryAddress String
}

model Employee {
  id       Int     @id @default(autoincrement())
  name     String
  password String
}

model Fabric {
  id          Int     @id @default(autoincrement())
  name        String
  composition String
}

model Machine {
  id           Int     @id @default(autoincrement())
  name         String
  processLinked String
}
model Supplier {
  id              Int     @id @default(autoincrement())
  name            String
  phone           String
  supplierAddress String
}
model RawMaterial {
  id            Int     @id @default(autoincrement())
  name          String  
  quantity      Float
  unitOfMeasure String  
}


model GoodsInwards {
  id                String              @id @default(cuid())
  gInwNo            String              @unique
  gDate             DateTime
  gCustomer         String
  gCategory         String
  gType             String
  gLabApproved      Boolean             @default(false)
  gCustDCNo         String?
  gCustDCDate       DateTime?
  gCustOrdNo        String?
  gVehNo            String?
  gStyleRefNo       String?
  gGreigeMarkingID  String?
  gMarketingBy      String?
  gPreparedBy       String?
  gCustOrdIncharge  String?
  gOldDONo          String?
  gMajorFabric      String?
  gLabNo            String?
  gNarration        String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  fabrics           GoodsInwardsFabric[]
  processes         GoodsInwardsProcess[]
}

model GoodsInwardsFabric {
  id          String        @id @default(cuid())
  gSNo        Int
  gFabric     String
  gColor      String?
  gGreigeGSM  String?
  gGreigeDIA  String?
  gFinishRolls String?
  gWeight     String?
  gMachine    String?
  goodsInwards GoodsInwards @relation(fields: [goodsInwardsId], references: [id], onDelete: Cascade)
  goodsInwardsId String

  @@unique([goodsInwardsId, gSNo])
}

model GoodsInwardsProcess {
  id          String        @id @default(cuid())
  gSNo        Int
  gProcess    String
  goodsInwards GoodsInwards @relation(fields: [goodsInwardsId], references: [id], onDelete: Cascade)
  goodsInwardsId String

  @@unique([goodsInwardsId, gSNo])
}