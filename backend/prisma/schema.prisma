generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id              Int     @id @default(autoincrement())
  name            String
  phone           String
  deliveryAddress String
}

model Employee {
  id       Int     @id @default(autoincrement())
  name     String
  password String
}

model Fabric {
  id          Int     @id @default(autoincrement())
  name        String
  composition String
}

model Machine {
  id           Int     @id @default(autoincrement())
  name         String
  processLinked String
}
model Supplier {
  id              Int     @id @default(autoincrement())
  name            String
  phone           String
  supplierAddress String
}
model RawMaterial {
  id            Int     @id @default(autoincrement())
  name          String  
  quantity      Float
  unitOfMeasure String  
}

model GoodsInward {
  id              String    @id @default(uuid())
  inwNo           String    @unique
  date            DateTime
  customer        String
  category        String
  type            String
  custDcNo        String
  dcDate          DateTime?
  custOrdNo       String?
  vehNo           String?
  styleRefNo      String?
  greigeMarkingId String?
  marketingBy     String?
  preparedBy      String?
  custOrdIncharge String?
  oldDoNo         String?
  majorFabric     String?
  labNo           String?
  isLabApproved   Boolean   @default(false)
  narration       String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  fabrics   Fabric[]
  processes Process[]
}

model Fabric {
  id         Int         @id @default(autoincrement())
  fabric     String
  color      String?
  greigeGsm  String?
  greigeDia  String?
  finishRolls String?
  weight     String?
  machine    String?
  
  // Relation to GoodsInward
  goodsInward   GoodsInward @relation(fields: [goodsInwardId], references: [id], onDelete: Cascade)
  goodsInwardId String

  @@index([goodsInwardId])
}

model Process {
  id       Int         @id @default(autoincrement())
  process  String
  
  // Relation to GoodsInward
  goodsInward   GoodsInward @relation(fields: [goodsInwardId], references: [id], onDelete: Cascade)
  goodsInwardId String

  @@index([goodsInwardId])
}